When would you want to use a remote repository rather than keeping all your work local?
I will use it all the time because if anything happened to my local repository there is a copy online


Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
Because if there is more than one working on the same repository it's not important that I want all his changed. Or maybe I don't have
space on my laptop.


Describe the differences between forks, clones, and branches. When would you use one instead of another?
The difference between fork and clone is the fork only work from github account to github account, but clone work from gitgub to your computer and it also work on the same computer. The branch is used to label the commits and to save your changes if you don't want to add it to the same branch. You also can use it to do other versions or modes from your code.  
I will  use clone instead of fork I if I was not allowed to change the original repository or if I want my work to be separate from the original one.


What is the benefit of having a copy of the last known state of the remote stored locally?
To know what is the last commit from the remote that you have locally so you know the difference between
remote and locall and you can merge. And you can fetch the remote changes commit from the local copy so know
you have all the commit locally. 


How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
I think I can't. I realy don't know any thing that is easy to collaborate I just know about git and github.


When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
If I don't want to change the master branch or I can use it if I want to make a pull request.
Separate branch is good if I want my work to be separate from the master. Working directly in master is less confusing.
/// Here I will paste what they mention about "When to use a separate branch" so if I need it I will back here.
You just saw that the workflow when making changes in a separate branch is more complicated than working directly in master, especially when you need to stay up-to-date with changes others are making. Rather than simply pulling and pushing, you need to pull changes into your local master branch, merge the local master into your branch (different-oil, in our case), then push your branch to the remote before finally merging your branch into master, either locally or on GitHub.